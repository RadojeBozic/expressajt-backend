name: Frontend – Build & Deploy to Cloudways

on:
  push:
    branches: [ main ]
    paths:
      - 'frontend/**'
      - '.github/workflows/deploy-frontend.yml'
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      SSH_HOST: ${{ secrets.SSH_HOST }}
      SSH_USER: ${{ secrets.SSH_USER }}
      DEST: /home/1475017.cloudwaysapps.com/ascqrnhbfh/public_html/public

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: Install & Build (frontend)
        working-directory: frontend
        shell: bash
        run: |
          set -euo pipefail
          npm ci
          npm run build

      # ✅ Umesto ručne pripreme ključa — koristimo agent koji sve sredi
      - name: Load SSH key
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_KEY }}

      - name: Trust host
        shell: bash
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -H "$SSH_HOST" >> ~/.ssh/known_hosts

      - name: Deploy dist to Cloudways public/
        shell: bash
        run: |
          set -euo pipefail
          # kreiraj assets dir ako ne postoji
          ssh -o StrictHostKeyChecking=yes \
            "$SSH_USER@$SSH_HOST" "mkdir -p \"$DEST/assets\""

          # očisti stare hashirane assete
          ssh -o StrictHostKeyChecking=yes \
            "$SSH_USER@$SSH_HOST" "rm -rf \"$DEST/assets\"/* || true"

          # prebaci nove assete (ako postoje)
          if compgen -G "frontend/dist/assets/*" > /dev/null; then
            scp -o StrictHostKeyChecking=yes -r \
              frontend/dist/assets/* \
              "$SSH_USER@$SSH_HOST:$DEST/assets/"
          fi

          # prebaci index.html
          scp -o StrictHostKeyChecking=yes \
            frontend/dist/index.html \
            "$SSH_USER@$SSH_HOST:$DEST/index.html"

      - name: Clear Laravel caches (optional)
        shell: bash
        run: |
          ssh -o StrictHostKeyChecking=yes \
            "$SSH_USER@$SSH_HOST" \
            'cd /home/1475017.cloudwaysapps.com/ascqrnhbfh/public_html && php artisan optimize:clear || true'
