# yaml-language-server: $schema=https://json.schemastore.org/github-workflow.json
name: Frontend – Build & Deploy to Cloudways

on:
  push:
    branches: [ main ]
    paths:
      - 'frontend/**'
      - '.github/workflows/deploy-frontend.yml'
  workflow_dispatch:

# Ne pokreći dva deploya paralelno
concurrency:
  group: deploy-frontend
  cancel-in-progress: true

permissions:
  contents: read

jobs:
  deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 15

    env:
      SSH_HOST: ${{ secrets.SSH_HOST }}
      SSH_USER: ${{ secrets.SSH_USER }}
      SSH_KEY:  ${{ secrets.SSH_KEY }}
      DEST: /home/1475017.cloudwaysapps.com/ascqrnhbfh/public_html/public

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: Install & Build (frontend)
        working-directory: frontend
        shell: bash
        run: |
          set -euo pipefail
          npm ci
          npm run build
          test -f dist/index.html || { echo "❌ dist/index.html ne postoji"; exit 1; }

      - name: Prepare SSH
        shell: bash
        run: |
          set -euo pipefail
          mkdir -p ~/.ssh
          # Ukloni CRLF (Windows) iz privatnog ključa
          printf '%s' "$SSH_KEY" | tr -d '\r' > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          # Validacija: padni odmah ako secret nije PRIVATNI ključ
          ssh-keygen -y -f ~/.ssh/id_rsa >/dev/null 2>&1 || { echo "❌ SSH_KEY nije PRIVATNI ključ (ili je oštećen)"; exit 1; }
          ssh-keyscan -H "$SSH_HOST" >> ~/.ssh/known_hosts

      - name: Deploy dist to Cloudways public/
        shell: bash
        run: |
          set -euo pipefail
          SSH_OPTS="-i ~/.ssh/id_rsa -o IdentitiesOnly=yes -o StrictHostKeyChecking=yes"

          # Kreiraj assets dir, očisti stare hashirane fajlove
          ssh $SSH_OPTS "$SSH_USER@$SSH_HOST" "mkdir -p '$DEST/assets' && rm -rf '$DEST/assets'/* || true"

          # Prebaci nove assete (ako postoje)
          if compgen -G "frontend/dist/assets/*" > /dev/null; then
            scp $SSH_OPTS -r frontend/dist/assets/* "$SSH_USER@$SSH_HOST:$DEST/assets/"
          fi

          # Prebaci index.html (SPA ulaz)
          scp $SSH_OPTS frontend/dist/index.html "$SSH_USER@$SSH_HOST:$DEST/index.html"

          # Marker fajl da možeš lako da vidiš vreme i commit
          DATE_UTC="$(date -u +'%Y-%m-%dT%H:%M:%SZ')"
          ssh $SSH_OPTS "$SSH_USER@$SSH_HOST" "echo 'Deployed: $DATE_UTC  Commit: $GITHUB_SHA' > '$DEST/DEPLOY.txt'"

      - name: Clear Laravel caches (optional)
        shell: bash
        run: |
          set -euo pipefail
          SSH_OPTS="-i ~/.ssh/id_rsa -o IdentitiesOnly=yes -o StrictHostKeyChecking=yes"
          ssh $SSH_OPTS "$SSH_USER@$SSH_HOST" 'cd /home/1475017.cloudwaysapps.com/ascqrnhbfh/public_html && php artisan optimize:clear || true'
